@model DigitalSignageAdapter.Models.Home.Diagnostics

@section Css{
    <link rel="stylesheet" href="~/Content/bootstrap-datetimepicker.css" />
}

@section Scripts{
    <script type="text/javascript" src="~/Scripts/moment-with-locales.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script type="text/javascript">
        $(function () {
            var dtpOptions =
                {
                    format: 'MM/DD/YYYY LT',
                    extraFormats: ['DD.M.YYYY. LTS'],
                    showClose: true,
                    showTodayButton: true
                };
            $('#dtpFrom').datetimepicker(dtpOptions)
            $('#dtpTo').datetimepicker(dtpOptions);
        });

    </script>
}


@{
    ViewBag.Title = "Diagnostics";
}

@using (Html.BeginForm("GetDiagnostics", "Home", FormMethod.Post, new { @class = "user-form" }))
{
<div class="row top-buffer form-inline">
    <div class="col-sm-2" style="margin-left: -5px">
        @Html.LabelFor(m => m.From, "From/to", new { @class = "btn btn-primary" })
    </div>
    <div class="col-sm-5">
        <div class="form-group">
            <div class="input-group date" id="dtpFrom">
                @Html.TextBoxFor(m => m.From, new { @class = "form-control" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
    </div>
    <div class="col-sm-5">
        <div class="form-group">
            <div class="input-group date" id="dtpTo">
                @Html.TextBoxFor(m => m.To, new { @class = "form-control" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
    </div>
</div>
<p class="top-buffer"></p>
<button type="submit" class="btn btn-default">Get data</button>
}

@if (Model.Data != null)
{
    <h2>Data by days</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Time</th>
                <th>Business</th>
                <th>Line</th>
                <th>Customers Count</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Data.Length; i++)
            {
                <tr class="@(Model.Data[i].IsCached != null && Model.Data[i].IsCached.Value ? "success": "")">
                    <td>@Model.Data[i].Date.Value.ToShortDateString()</td>
                    <td>@Model.Data[i].MinDate.Value.ToShortTimeString() to @Model.Data[i].MaxDate.Value.ToShortTimeString()</td>
                    <td>@Model.Data[i].BusinessId - @Model.Data[i].BusinessName</td>
                    <td>@Model.Data[i].LineId - @Model.Data[i].LineName</td>
                    <td>@Model.Data[i].CustomersCount</td>
                </tr>
            }
        </tbody>
    </table>
}

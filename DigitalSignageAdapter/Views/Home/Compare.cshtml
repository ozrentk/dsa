@model DigitalSignageAdapter.Models.Home.Compare

@section Css{
    <link rel="stylesheet" href="~/Content/bootstrap-datetimepicker.css" />
}

@section Scripts{
    <script type="text/javascript" src="~/Scripts/moment-with-locales.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script type="text/javascript" src="~/Scripts/Compare.js"></script>
}

@{
    ViewBag.Title = "Compare";

    System.Globalization.CultureInfo culture = new System.Globalization.CultureInfo("en-US");
}

@using (Html.BeginForm("Compare", "Home", FormMethod.Post, new { @class = "user-form" }))
{
    @Html.HiddenFor(m => m.ActionIsAdd)
    @Html.HiddenFor(m => m.ActionIsRemove)
    @Html.HiddenFor(m => m.ActionIsToggle)
    @Html.HiddenFor(m => m.ActionItemNumber)
    @Html.HiddenFor(m => m.ActionBusinessId)
    @Html.HiddenFor(m => m.ActionLineId)
    @Html.HiddenFor(m => m.ActionEmployeeId)
    @Html.HiddenFor(m => m.TimeEntryType)

    @*Time interval header*@
    <div class="row gutter-small top-margin-small">
        <div class="col-xs-12">
            <span class="label label-default label-wide">Select time interval</span>
        </div>
    </div>
    <div class="row gutter-small top-margin-small">
        <div class="col-xs-1">
            <a href="javascript:$('form').submit()" class="btn btn-primary btn-block">
                <span class="glyphicon glyphicon-refresh"></span>
            </a>
        </div>
        <div class="col-xs-11">
            <div class="input-group @(Model.TimeEntryType == DigitalSignageAdapter.Models.Shared.TimeEntryType.Days ? "hidden" : "")">
                @Html.LabelFor(m => m.ClientTimeFrom, "From/to", new { @class = "input-group-addon btn btn-primary" })
                @Html.TextBoxFor(m => m.ClientTimeFrom, new { @class = "form-control" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
                @Html.TextBoxFor(m => m.ClientTimeTo, new { @class = "form-control" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <div class="input-group @(Model.TimeEntryType == DigitalSignageAdapter.Models.Shared.TimeEntryType.FromTo ? "hidden" : "")">
                @Html.LabelFor(m => m.TimeInDays, "Days", new { @class = "input-group-addon btn btn-primary" })
                @Html.TextBoxFor(m => m.TimeInDays, new { type = "number", min = "0", @class = "form-control" })
            </div>
        </div>
    </div>
    @*Filtering header*@
    <div class="row top-margin-big gutter-small">
        <div class="col-xs-12">
            <span class="label label-default label-wide">Filter by business / line / employee</span>
        </div>
    </div>
    <div class="row gutter-small">
        @*Header - businesses selected for comparison*@
        @if (Model.CompareItems != null && Model.CompareItems.Count > 0)
        {
            for (int i = 0; i < Model.CompareItems.Count; i++)
            {
                <div class="col-xs-4">
                    @Html.HiddenFor(m => m.CompareItems[i].ItemNumber)
                    @Html.HiddenFor(m => m.CompareItems[i].SelectedBusiness.Id)
                    @Html.HiddenFor(m => m.CompareItems[i].SelectedBusiness.Name)
                    <a href="javascript:void(0)" class="btn btn-primary btn-block compare-item" data-compareitem-number="@Model.CompareItems[i].ItemNumber">
                        <span class="glyphicon glyphicon-remove"></span> @Html.DisplayFor(m => m.CompareItems[i].SelectedBusiness.Name)
                    </a>
                </div>
            }
        }
        @*Header - one dropdown for business selection*@
        @if (Model.CompareItems == null || Model.CompareItems.Count < 3)
        {
            <div class="col-xs-4">
                <div class="dropdown business-dropdown">
                    <a href="javascript:void(0)" class="btn btn-primary btn-block dropdown-toggle" data-toggle="dropdown">
                        Select business
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @for (int i = 0; i < Model.BusinessList.Count; i++)
                        {
                            var usedBusinessIds = Model.BusinessList.Select(b => b.Id);
                            <li><a href="#" data-business-id="@Model.BusinessList[i].Id">@Model.BusinessList[i].Name</a></li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
    if (Model.CompareItems != null && Model.CompareItems.Count > 0)
    {
        <div class="row gutter-small top-margin-small">
            @*Header - line filter*@
            @for (int i = 0; i < Model.CompareItems.Count; i++)
            {
                var businessId = Model.CompareItems[i].SelectedBusiness.Id;
                <div class="col-xs-4">
                    @*Header - lines selected for comparison*@
                    @if (Model.CompareItems[i].SelectedLineList != null && Model.CompareItems[i].SelectedLineList.Count > 0)
                    {
                        for (int j = 0; j < Model.CompareItems[i].SelectedLineList.Count; j++)
                        {
                            @Html.HiddenFor(m => m.CompareItems[i].SelectedLineList[j].Id)
                            @Html.HiddenFor(m => m.CompareItems[i].SelectedLineList[j].Name)
                        }
                    }

                    @*Header - one dropdown for line selection*@
                    <div class="dropdown line-dropdown">
                        @{
                            string label = "";
                            if (Model.CompareItems[i].SelectedLineList != null && Model.CompareItems[i].SelectedLineList.Count > 0)
                            {
                                label = String.Join(", ", Model.CompareItems[i].SelectedLineList.Select(l => l.Name).ToArray());
                            }
                            else
                            {
                                label = "All lines";
                            }
                        }
                        <a href="javascript:void(0)" class="btn btn-primary btn-block dropdown-toggle" data-toggle="dropdown">
                            <span class="glyphicon glyphicon-filter"></span>
                            @label
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu">
                            @for (int j = 0; j < Model.CompareItems[i].LineList.Count; j++)
                            {
                                <li><a href="#" data-compareitem-number="@Model.CompareItems[i].ItemNumber" data-line-id="@Model.CompareItems[i].LineList[j].Id">@Model.CompareItems[i].LineList[j].Name</a></li>
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
        <div class="row gutter-small top-margin-small">
            @*Header - employee filter (show if any line is selected)*@
            @if (Model.CompareItems.Any(ci => ci.SelectedLineList != null && ci.SelectedLineList.Count > 0))
            {
                for (int i = 0; i < Model.CompareItems.Count; i++)
                {
                    if (Model.CompareItems[i].SelectedLineList == null || Model.CompareItems[i].SelectedLineList.Count == 0)
                    {
                        <div class="col-xs-4"></div>
                        continue;
                    }
                    <div class="col-xs-4">
                        @if (Model.CompareItems[i].SelectedEmployee != null)
                        {
                            @Html.HiddenFor(m => m.CompareItems[i].SelectedEmployee.Id)
                            @Html.HiddenFor(m => m.CompareItems[i].SelectedEmployee.Name)
                        }

                        @*Header - one dropdown for line selection*@
                        <div class="dropdown employee-dropdown">
                            <a href="javascript:void(0)" class="btn btn-primary btn-block dropdown-toggle" data-toggle="dropdown">
                                <span class="glyphicon glyphicon-filter"></span>
                                @(Model.CompareItems[i].SelectedEmployee != null ? Model.CompareItems[i].SelectedEmployee.Name : "All employees")
                                <span class="caret"></span>
                            </a>
                            <ul class="dropdown-menu">
                                @for (int j = 0; j < Model.CompareItems[i].EmployeeList.Count; j++)
                                {
                                    <li><a href="#" data-compareitem-number="@Model.CompareItems[i].ItemNumber" data-employee-id="@Model.CompareItems[i].EmployeeList[j].Id">@Model.CompareItems[i].EmployeeList[j].Name</a></li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            }
        </div>
        @*Body - aggregated data*@
        <div class="row top-margin-big gutter-small">
            <div class="col-xs-12">
                <span class="label label-default label-wide">Avg. wait time</span>
            </div>
        </div>
        <div class="row gutter-small">
            @for (int i = 0; i < Model.CompareItems.Count; i++)
            {
                <div class="col-xs-4 lead">
                    <span class="label label-primary label-wide">
                        @Model.CompareItems[i].AggregatedData.AverageWaitTimeDisplay
                    </span>
                </div>
            }
        </div>
        <div class="row top-margin-big gutter-small">
            <div class="col-xs-12">
                <span class="label label-default label-wide">Avg. svc time</span>
            </div>
        </div>
        <div class="row gutter-small">
            @for (int i = 0; i < Model.CompareItems.Count; i++)
            {
                <div class="col-xs-4 lead">
                    <span class="label label-primary label-wide">
                        @Model.CompareItems[i].AggregatedData.AverageServiceTimeDisplay
                    </span>
                </div>
            }
        </div>
        <div class="row top-margin-big gutter-small">
            <div class="col-xs-12">
                <span class="label label-default label-wide">Customers serviced</span>
            </div>
        </div>
        <div class="row gutter-small">
            @for (int i = 0; i < Model.CompareItems.Count; i++)
            {
                <div class="col-xs-4 lead">
                    <span class="label label-primary label-wide">
                        @Model.CompareItems[i].AggregatedData.CustomersServicedCount
                    </span>
                </div>
            }
        </div>
        <div class="row top-margin-big gutter-small">
            <div class="col-xs-12">
                <span class="label label-warning label-wide">
                    Data from @Model.ClientTimeFrom.ToString("g", culture) to @Model.ClientTimeTo.ToString("g", culture)
                    <span class="glyphicon glyphicon-question-sign" title="Showing data for selected period"></span>
                </span>
            </div>
        </div>
    }
}